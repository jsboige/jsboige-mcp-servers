# run-e2e-tests.ps1
# Script pour ex√©cuter les tests E2E RooSync

param(
    [switch]$Workflow,
    [switch]$ErrorHandling,
    [switch]$All,
    [switch]$Verbose
)

$ErrorActionPreference = "Continue"

Write-Host "=== Tests E2E RooSync ===" -ForegroundColor Cyan
Write-Host ""

# V√©rifier que l'environnement est configur√©
if (-not $env:SHARED_STATE_PATH) {
    Write-Host "‚ö†Ô∏è ATTENTION: SHARED_STATE_PATH non configur√©" -ForegroundColor Yellow
    Write-Host "   Les tests E2E n√©cessitent un environnement RooSync configur√©" -ForegroundColor Yellow
    Write-Host "   Configurez SHARED_STATE_PATH dans .env" -ForegroundColor Yellow
    Write-Host ""
}

# Aller au r√©pertoire du projet
$projectRoot = Split-Path -Parent $PSScriptRoot | Split-Path -Parent | Split-Path -Parent
Set-Location $projectRoot

Write-Host "üìÅ R√©pertoire projet : $projectRoot" -ForegroundColor Green
Write-Host ""

# Construire les tests
Write-Host "üî® Construction des tests..." -ForegroundColor Green
npm run build:tests

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de la construction des tests" -ForegroundColor Red
    exit 1
}

Write-Host ""

# D√©terminer quels tests ex√©cuter
$testPattern = ""

if ($Workflow) {
    $testPattern = "tests/e2e/roosync-workflow.test.ts"
    Write-Host "üß™ Ex√©cution tests workflow uniquement" -ForegroundColor Yellow
} elseif ($ErrorHandling) {
    $testPattern = "tests/e2e/roosync-error-handling.test.ts"
    Write-Host "üß™ Ex√©cution tests error-handling uniquement" -ForegroundColor Yellow
} elseif ($All) {
    $testPattern = "tests/e2e/"
    Write-Host "üß™ Ex√©cution de TOUS les tests E2E" -ForegroundColor Yellow
} else {
    Write-Host "Usage:" -ForegroundColor Cyan
    Write-Host "  .\run-e2e-tests.ps1 -Workflow         # Tests workflow complet"
    Write-Host "  .\run-e2e-tests.ps1 -ErrorHandling    # Tests gestion erreurs"
    Write-Host "  .\run-e2e-tests.ps1 -All              # Tous les tests E2E"
    Write-Host "  .\run-e2e-tests.ps1 -All -Verbose     # Avec sortie d√©taill√©e"
    Write-Host ""
    Write-Host "Par d√©faut, ex√©cute tous les tests E2E" -ForegroundColor Yellow
    $testPattern = "tests/e2e/"
}

Write-Host ""

# Options Jest
$jestOptions = @(
    "--runInBand",
    "--testTimeout=120000"  # 2 minutes par test
)

if ($Verbose) {
    $jestOptions += "--verbose"
}

# Ex√©cuter les tests
Write-Host "üöÄ Lancement des tests..." -ForegroundColor Green
Write-Host ""

$env:NODE_OPTIONS = "--experimental-vm-modules --max-old-space-size=4096"

if ($testPattern) {
    & npm run test:setup
    & npx jest $testPattern @jestOptions
} else {
    & npm run test:setup
    & npx jest "tests/e2e/" @jestOptions
}

$testExitCode = $LASTEXITCODE

Write-Host ""
Write-Host "=== Fin des tests E2E ===" -ForegroundColor Cyan

if ($testExitCode -eq 0) {
    Write-Host "‚úÖ Tous les tests sont pass√©s !" -ForegroundColor Green
} else {
    Write-Host "‚ùå Certains tests ont √©chou√© (code $testExitCode)" -ForegroundColor Red
}

Write-Host ""
Write-Host "üìä Pour g√©n√©rer un rapport d√©taill√© :" -ForegroundColor Cyan
Write-Host "   npm run test:coverage -- tests/e2e/" -ForegroundColor Gray

exit $testExitCode