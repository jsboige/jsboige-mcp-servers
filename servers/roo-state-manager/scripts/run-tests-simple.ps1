# Script Simple d'Ex√©cution des Tests
param(
    [string]$OutputFile = "test-results.txt"
)

$ErrorActionPreference = "Continue"

Write-Host "==================================================" -ForegroundColor Cyan
Write-Host "EX√âCUTION DES TESTS" -ForegroundColor Cyan
Write-Host "==================================================" -ForegroundColor Cyan
Write-Host ""

# Se placer dans le r√©pertoire du package
$packageRoot = Split-Path -Parent $PSScriptRoot
Set-Location $packageRoot

Write-Host "üìÅ R√©pertoire : $packageRoot" -ForegroundColor Yellow
Write-Host "üìù Fichier de sortie : $OutputFile" -ForegroundColor Yellow
Write-Host ""

# Timestamp de d√©but
$startTime = Get-Date
Write-Host "‚è±Ô∏è  D√©but : $($startTime.ToString('yyyy-MM-dd HH:mm:ss'))" -ForegroundColor Green
Write-Host ""

# Ex√©cuter les tests
Write-Host "üß™ Ex√©cution de la suite de tests..." -ForegroundColor Cyan
npm test 2>&1 | Tee-Object -FilePath $OutputFile

$exitCode = $LASTEXITCODE

# Timestamp de fin
$endTime = Get-Date
$duration = $endTime - $startTime

Write-Host ""
Write-Host "==================================================" -ForegroundColor Cyan
Write-Host "‚è±Ô∏è  Fin : $($endTime.ToString('yyyy-MM-dd HH:mm:ss'))" -ForegroundColor Green
Write-Host "‚è±Ô∏è  Dur√©e : $($duration.TotalSeconds) secondes" -ForegroundColor Green
Write-Host "üìÑ R√©sultats sauvegard√©s dans : $OutputFile" -ForegroundColor Yellow
Write-Host ""

# Analyse rapide
$content = Get-Content $OutputFile -Raw

if ($content -match "(\d+) passing") {
    Write-Host "‚úÖ Tests passants : $($matches[1])" -ForegroundColor Green
}

if ($content -match "(\d+) failing") {
    Write-Host "‚ùå Tests √©chouants : $($matches[1])" -ForegroundColor Red
}

if ($exitCode -eq 0) {
    Write-Host "‚úÖ SUCC√àS" -ForegroundColor Green
}
else {
    Write-Host "‚ö†Ô∏è  √âCHECS D√âTECT√âS" -ForegroundColor Yellow
}

Write-Host ""