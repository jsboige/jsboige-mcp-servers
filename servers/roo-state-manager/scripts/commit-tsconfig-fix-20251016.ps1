#!/usr/bin/env pwsh
<#
.SYNOPSIS
    Commit de la correction tsconfig.json dans le sous-module
.DESCRIPTION
    Phase de commit s√©curis√©e pour la correction du build path
    Mission : Validation Fonctionnelle MCP et Push Final S√©curis√©
#>

Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

$ServerDir = Split-Path -Parent $PSScriptRoot
Push-Location $ServerDir

try {
    Write-Host "üìù COMMIT CORRECTION TSCONFIG" -ForegroundColor Cyan
    Write-Host ""

    # V√©rifier qu'on est dans le bon r√©pertoire
    $gitRoot = git rev-parse --show-toplevel 2>$null
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Pas dans un d√©p√¥t git" -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ D√©p√¥t git d√©tect√©: $gitRoot" -ForegroundColor Green

    # V√©rifier √©tat avant commit
    Write-Host ""
    Write-Host "üìä √âTAT GIT AVANT COMMIT:" -ForegroundColor Cyan
    git status --short

    # V√©rifier fichiers modifi√©s
    $modified = git status --short
    if ($modified -notmatch "tsconfig.json") {
        Write-Host ""
        Write-Host "‚ö†Ô∏è tsconfig.json non modifi√©, v√©rification √©tendue..." -ForegroundColor Yellow
        git diff --name-only HEAD
    }

    # Stage des fichiers critiques
    Write-Host ""
    Write-Host "‚ûï STAGING FICHIERS..." -ForegroundColor Cyan
    
    git add tsconfig.json
    if (Test-Path "scripts/test-startup-20251016.ps1") {
        git add scripts/test-startup-20251016.ps1
        Write-Host "  + scripts/test-startup-20251016.ps1" -ForegroundColor Gray
    }
    Write-Host "  + tsconfig.json" -ForegroundColor Gray

    # Rebuild pour assurer coh√©rence (fichiers build/ pas commit√©s)
    Write-Host ""
    Write-Host "üîÑ REBUILD AVANT COMMIT..." -ForegroundColor Cyan
    npm run build | Out-Null
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Build √©chou√©" -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ Build r√©ussi" -ForegroundColor Green

    # Commit
    Write-Host ""
    Write-Host "üíæ COMMIT..." -ForegroundColor Cyan
    $commitMsg = @"
fix(build): Correct tsconfig.json rootDir for proper build output

- Changed rootDir from "." to "./src" to flatten build structure
- Fixes MODULE_NOT_FOUND error (expected build/index.js, got build/src/index.js)
- Server now starts successfully
- Added test-startup-20251016.ps1 for validation

Validation: npm start succeeds with timeout (server running)
Part of: Mission Validation Fonctionnelle MCP et Push Final S√©curis√©
"@

    git commit -m $commitMsg
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Commit √©chou√©" -ForegroundColor Red
        exit 1
    }

    # V√©rifier √©tat apr√®s commit
    Write-Host ""
    Write-Host "üìä √âTAT APR√àS COMMIT:" -ForegroundColor Cyan
    git log --oneline -1
    git status --short

    Write-Host ""
    Write-Host "‚úÖ COMMIT R√âUSSI" -ForegroundColor Green
    Write-Host "SHA: $(git rev-parse HEAD)" -ForegroundColor Gray

} catch {
    Write-Host ""
    Write-Host "‚ùå ERREUR: $_" -ForegroundColor Red
    exit 1
} finally {
    Pop-Location
}