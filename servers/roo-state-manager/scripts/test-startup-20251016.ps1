#!/usr/bin/env pwsh
<#
.SYNOPSIS
    Test de d√©marrage du serveur MCP roo-state-manager
.DESCRIPTION
    Valide que le serveur d√©marre correctement apr√®s rebuild
    Partie de la mission : Validation Fonctionnelle MCP et Push Final S√©curis√©
#>

Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

$ServerDir = Split-Path -Parent $PSScriptRoot
Push-Location $ServerDir

try {
    Write-Host "üß™ TEST D√âMARRAGE SERVEUR MCP" -ForegroundColor Cyan
    Write-Host "R√©pertoire: $ServerDir" -ForegroundColor Gray
    Write-Host ""

    # V√©rifier pr√©sence build/index.js
    if (-not (Test-Path "build/index.js")) {
        Write-Host "‚ùå ERREUR: build/index.js introuvable" -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ build/index.js pr√©sent" -ForegroundColor Green

    # D√©marrer serveur avec timeout
    Write-Host ""
    Write-Host "üöÄ D√©marrage serveur (timeout 8s)..." -ForegroundColor Cyan
    
    $job = Start-Job -ScriptBlock {
        Set-Location $using:ServerDir
        npm start 2>&1
    }

    # Attendre 8 secondes
    $waited = Wait-Job $job -Timeout 8

    if ($null -eq $waited) {
        # Timeout atteint = serveur probablement d√©marr√©
        Write-Host "‚úÖ Serveur d√©marr√© (timeout atteint = processus actif)" -ForegroundColor Green
        Stop-Job $job -ErrorAction SilentlyContinue
    } else {
        # Job termin√© pr√©matur√©ment = erreur
        Write-Host "‚ùå Serveur termin√© pr√©matur√©ment" -ForegroundColor Red
        $output = Receive-Job $job
        Write-Host $output -ForegroundColor Yellow
        Remove-Job $job
        exit 1
    }

    # R√©cup√©rer sortie
    $output = Receive-Job $job -ErrorAction SilentlyContinue
    Remove-Job $job -Force

    Write-Host ""
    Write-Host "üìã SORTIE SERVEUR:" -ForegroundColor Cyan
    if ($output) {
        Write-Host $output -ForegroundColor Gray
    } else {
        Write-Host "(Aucune sortie captur√©e avant timeout)" -ForegroundColor Gray
    }

    Write-Host ""
    Write-Host "‚úÖ VALIDATION R√âUSSIE" -ForegroundColor Green
    Write-Host "Le serveur d√©marre sans erreur critique" -ForegroundColor Gray

} catch {
    Write-Host ""
    Write-Host "‚ùå ERREUR: $_" -ForegroundColor Red
    exit 1
} finally {
    Pop-Location
}